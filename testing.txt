https://dev.to/nazeeh21/testing-solidity-smart-contracts-3jho for testing
https://samfrenchblog.com/?p=315
https://github.com/loki-sama/solidity-lottery/blob/master/test/lottery.js



buna bak: https://www.youtube.com/watch?v=62f757RVEvU
https://www.youtube.com/watch?v=YYJgeV7sOvM (bu çok iyi test ve deployment için)

https://medium.com/coinmonks/test-a-smart-contract-with-truffle-3eb8e1929370

npm i -g ganache-cli da lazım
ganache-cli --gasLimit=0x1fffffffffffff --allowUnlimitedContractSize -e 1000000000 -a 250

truffle compile -> compiles contracts 
truffle develop -> to open up a console for testing 
truffle migrate -> deploys contracts : see truffle-config.js and 1_initial_migration.js for configuration details
migrate çalıştırmak için önce develop çalışmalı şart
bunda run out of gas hatası aldık nasıl çözeriz
truffle test -> runs the written unit tests under test directory

truffle testten gelen error: 
Error: Cannot find module 'babel-runtime/core-js/object/entries'
Require stack:....

https://ethereum.stackexchange.com/questions/67593/as-in-truffle-tests-pass-the-check-by-block-timestamp to rewind time
https://medium.com/coinmonks/testing-time-dependent-logic-in-ethereum-smart-contracts-1b24845c7f72

    //bir array dönerse tüm elemanları big number olarak dönecek dolayısıyla map fonksiyonuyla onlara toNumber uygulayıp elde etmek lazımmış
    //contract blockunda uygulananlar birbrilerine bağlıdır. ilk testte bir arraye bir şey eklersen ikinci testte o eklediğin elemanı bulabilirsin.
    //assert(array === [1,2,3]); yanlış
    //assert.deepEqual(array, [1,2,3]); doğru
    //fonksiyon tuple dönüyorsa result[0], result[1] şeklinde değerleri alabilirsin
    //to test that a function reverts, use try catch
